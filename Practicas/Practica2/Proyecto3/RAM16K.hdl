// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/b/RAM16K.hdl
/**
 * Memory of 16K 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    /* Los tres bits más significativos seleccionan cuál de los ocho chips RAM4K
     * cargar, mientras que los once bits menos significativos seleccionan
     * el registro dentro de ese RAM4K */
    DMux8Way(in=load, sel=address[11..13], a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);

    // Ocho chips RAM4K, cada uno con su propio `load` y dirección
    RAM4K(in=in, load=load0, address=address[0..11], out=ram0);
    RAM4K(in=in, load=load1, address=address[0..11], out=ram1);
    RAM4K(in=in, load=load2, address=address[0..11], out=ram2);
    RAM4K(in=in, load=load3, address=address[0..11], out=ram3);
    RAM4K(in=in, load=load4, address=address[0..11], out=ram4);
    RAM4K(in=in, load=load5, address=address[0..11], out=ram5);
    RAM4K(in=in, load=load6, address=address[0..11], out=ram6);
    RAM4K(in=in, load=load7, address=address[0..11], out=ram7);

    // Mux para seleccionar la salida del RAM4K correcto
    Mux8Way16(a=ram0, b=ram1, c=ram2, d=ram3, e=ram4, f=ram5, g=ram6, h=ram7, sel=address[11..13], out=out);
}