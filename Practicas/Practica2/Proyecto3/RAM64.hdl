// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Dividir la direcci√≥n en partes para seleccionar el RAM8 y el registro dentro de ese RAM8
    DMux8Way(in=load, sel=address[3..5], a=loadA, b=loadB, c=loadC, d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);

    // Ocho chips RAM8
    RAM8(in=in, load=loadA, address=address[0..2], out=ra);
    RAM8(in=in, load=loadB, address=address[0..2], out=rb);
    RAM8(in=in, load=loadC, address=address[0..2], out=rc);
    RAM8(in=in, load=loadD, address=address[0..2], out=rd);
    RAM8(in=in, load=loadE, address=address[0..2], out=re);
    RAM8(in=in, load=loadF, address=address[0..2], out=rf);
    RAM8(in=in, load=loadG, address=address[0..2], out=rg);
    RAM8(in=in, load=loadH, address=address[0..2], out=rh);

    // Mux para seleccionar la salida correcta
    Mux8Way16(a=ra, b=rb, c=rc, d=rd, e=re, f=rf, g=rg, h=rh, sel=address[3..5], out=out);
}