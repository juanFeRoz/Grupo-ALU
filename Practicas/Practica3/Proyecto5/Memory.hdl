CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Demultiplexa la señal de carga entre las diferentes memorias según las líneas de dirección más altas
    DMux4Way(in=load, sel=address[13..14], a=loadToRAM1, b=loadToRAM2, c=loadToScreen, d=loadToKeyboard);
    
    // Combinamos las señales para cargar en la RAM de 16K si alguna de las primeras dos opciones es seleccionada
    Or(a=loadToRAM1, b=loadToRAM2, out=loadToRAM);

    // RAM de 16K respondiendo a las primeras 14 líneas de dirección
    RAM16K(in=in, load=loadToRAM, address=address[0..13], out=outputFromRAM);

    // La pantalla usa menos líneas de dirección y tiene su propia señal de carga
    Screen(in=in, load=loadToScreen, address=address[0..12], out=outputFromScreen);

    // El teclado no tiene líneas de entrada o de carga, simplemente proporciona su estado actual
    Keyboard(out=outputFromKeyboard);

    // Selecciona la salida correcta basada en las líneas de dirección altas
    Mux4Way16(a=outputFromRAM, b=outputFromRAM, c=outputFromScreen, d=outputFromKeyboard, sel=address[13..14], out=out);
}
